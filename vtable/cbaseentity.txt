// Auto reconstructed from vtable block @ 0x009F55A0
// from "client.dylib", by ida_vtables.idc
0	C_BaseEntity::~C_BaseEntity()
1	C_BaseEntity::~C_BaseEntity()
2	C_BaseEntity::SetRefEHandle(CBaseHandle const&)
3	C_BaseEntity::GetRefEHandle(void)const
4	C_BaseEntity::GetCollideable(void)
5	C_BaseEntity::GetClientNetworkable(void)
6	C_BaseEntity::GetClientRenderable(void)
7	C_BaseEntity::GetIClientEntity(void)
8	C_BaseEntity::GetBaseEntity(void)
9	C_BaseEntity::GetClientThinkable(void)
10	C_BaseEntity::Release(void)
11	C_BaseEntity::GetAbsOrigin(void)const
12	C_BaseEntity::GetAbsAngles(void)const
13	C_BaseEntity::GetMouth(void)
14	C_BaseEntity::GetSoundSpatialization(SpatializationInfo_t &)
15	C_BaseEntity::GetDataDescMap(void)
16	C_BaseEntity::YouForgotToImplementOrDeclareClientClass(void)
17	C_BaseEntity::GetClientClass(void)
18	C_BaseEntity::GetPredDescMap(void)
19	C_BaseEntity::FireBullets(FireBulletsInfo_t const&)
20	C_BaseEntity::ModifyFireBulletsDamage(CTakeDamageInfo *)
21	C_BaseEntity::ShouldDrawUnderwaterBulletBubbles(void)
22	C_BaseEntity::ShouldDrawWaterImpacts(void)
23	C_BaseEntity::HandleShotImpactingWater(FireBulletsInfo_t const&,Vector const&,ITraceFilter *,Vector*)
24	C_BaseEntity::GetBeamTraceFilter(void)
25	C_BaseEntity::DispatchTraceAttack(CTakeDamageInfo const&,Vector const&,CGameTrace *,CDmgAccumulator *)
26	C_BaseEntity::TraceAttack(CTakeDamageInfo const&,Vector const&,CGameTrace *,CDmgAccumulator *)
27	C_BaseEntity::DoImpactEffect(CGameTrace &,int)
28	C_BaseEntity::MakeTracer(Vector const&,CGameTrace const&,int)
29	C_BaseEntity::GetTracerAttachment(void)
30	C_BaseEntity::BloodColor(void)
31	C_BaseEntity::GetTracerType(void)
32	C_BaseEntity::Spawn(void)
33	C_BaseEntity::SpawnClientEntity(void)
34	C_BaseEntity::Precache(void)
35	C_BaseEntity::Activate(void)
36	C_BaseEntity::ParseMapData(CEntityMapData *)
37	C_BaseEntity::KeyValue(char const*,char const*)
38	C_BaseEntity::KeyValue(char const*,float)
39	C_BaseEntity::KeyValue(char const*,Vector const&)
40	C_BaseEntity::GetKeyValue(char const*,char *,int)
41	C_BaseEntity::Init(int,int)
42	C_BaseEntity::GetIClientUnknown(void)
43	C_BaseEntity::GetBaseAnimating(void)
44	C_BaseEntity::SetClassname(char const*)
45	C_BaseEntity::RecordToolMessage(void)
46	C_BaseEntity::GetRenderOrigin(void)
47	C_BaseEntity::GetRenderAngles(void)
48	C_BaseEntity::GetObserverCamOrigin(void)
49	C_BaseEntity::RenderableToWorldTransform(void)
50	C_BaseEntity::IsTransparent(void)
51	C_BaseEntity::IsTwoPass(void)
52	C_BaseEntity::UsesPowerOfTwoFrameBufferTexture(void)
53	C_BaseEntity::UsesFullFrameBufferTexture(void)
54	C_BaseEntity::IgnoresZBuffer(void)const
55	C_BaseEntity::GetModel(void)const
56	C_BaseEntity::DrawModel(int)
57	C_BaseEntity::ComputeFxBlend(void)
58	C_BaseEntity::GetFxBlend(void)
59	C_BaseEntity::LODTest(void)
60	C_BaseEntity::GetRenderBounds(Vector &,Vector &)
61	C_BaseEntity::GetPVSNotifyInterface(void)
62	C_BaseEntity::GetRenderBoundsWorldspace(Vector &,Vector &)
63	C_BaseEntity::GetShadowRenderBounds(Vector &,Vector &,ShadowType_t)
64	C_BaseEntity::GetColorModulation(float *)
65	C_BaseEntity::OnThreadedDrawSetup(void)
66	C_BaseEntity::TestCollision(Ray_t const&,unsigned int,CGameTrace &)
67	C_BaseEntity::TestHitboxes(Ray_t const&,unsigned int,CGameTrace &)
68	C_BaseEntity::GetAttackDamageScale(void)
69	C_BaseEntity::NotifyShouldTransmit(ShouldTransmitState_t)
70	C_BaseEntity::PreDataUpdate(DataUpdateType_t)
71	C_BaseEntity::PostDataUpdate(DataUpdateType_t)
72	C_BaseEntity::OnDataUnchangedInPVS(void)
73	C_BaseEntity::ValidateModelIndex(void)
74	C_BaseEntity::SetDormant(bool)
75	C_BaseEntity::IsDormant(void)
76	C_BaseEntity::SetDestroyedOnRecreateEntities(void)
77	C_BaseEntity::GetEFlags(void)const
78	C_BaseEntity::SetEFlags(int)
79	C_BaseEntity::entindex(void)const
80	C_BaseEntity::ReceiveMessage(int,bf_read &)
81	C_BaseEntity::GetDataTableBasePtr(void)
82	C_BaseEntity::ClientThink(void)
83	C_BaseEntity::GetThinkHandle(void)
84	C_BaseEntity::SetThinkHandle(CClientThinkHandlePtr *)
85	C_BaseEntity::ShouldSavePhysics(void)
86	C_BaseEntity::OnSave(void)
87	C_BaseEntity::OnRestore(void)
88	C_BaseEntity::ObjectCaps(void)
89	C_BaseEntity::Save(ISave &)
90	C_BaseEntity::Restore(IRestore &)
91	C_BaseEntity::CreateVPhysics(void)
92	C_BaseEntity::VPhysicsDestroyObject(void)
93	C_BaseEntity::GMOD_VPhysicsTest(IPhysicsObject *)
94	C_BaseEntity::GMOD_GetPhysBoneMatrix(int)
95	C_BaseEntity::VPhysicsUpdate(IPhysicsObject *)
96	C_BaseEntity::VPhysicsGetObjectList(IPhysicsObject **,int)
97	C_BaseEntity::VPhysicsIsFlesh(void)
98	C_BaseEntity::SetupBones(matrix3x4_t *,int,int,float)
99	C_BaseEntity::SetupWeights(matrix3x4_t const*,int,float *,float *)
100	C_BaseEntity::UsesFlexDelayedWeights(void)
101	C_BaseEntity::DoAnimationEvents(void)
102	C_BaseEntity::AddEntity(void)
103	C_BaseEntity::GetLocalAngles(void)const
104	C_BaseEntity::GetPrevLocalOrigin(void)const
105	C_BaseEntity::GetPrevLocalAngles(void)const
106	C_BaseEntity::CalcOverrideModelIndex(void)
107	C_BaseEntity::WorldAlignMins(void)const
108	C_BaseEntity::WorldAlignMaxs(void)const
109	C_BaseEntity::WorldSpaceCenter(void)const
110	C_BaseEntity::ComputeWorldSpaceSurroundingBox(Vector *,Vector *)
111	C_BaseEntity::GetSolid(void)const
112	C_BaseEntity::GetSolidFlags(void)const
113	C_BaseEntity::LookupAttachment(char const*)
114	C_BaseEntity::GetAttachment(int,matrix3x4_t &)
115	C_BaseEntity::GetAttachment(int,Vector &)
116	C_BaseEntity::GetAttachment(int,Vector &,QAngle &)
117	C_BaseEntity::GetAttachmentVelocity(int,Vector &,Quaternion &)
118	C_BaseEntity::GetTeam(void)
119	C_BaseEntity::GetTeamNumber(void)const
120	C_BaseEntity::ChangeTeam(int)
121	C_BaseEntity::GetRenderTeamNumber(void)
122	C_BaseEntity::InSameTeam(C_BaseEntity*)
123	C_BaseEntity::InLocalTeam(void)
124	C_BaseEntity::IsValidIDTarget(void)
125	C_BaseEntity::GetIDString(void)
126	C_BaseEntity::ModifyEmitSoundParams(EmitSound_t &)
127	C_BaseEntity::InitializeAsClientEntity(char const*,RenderGroup_t)
128	C_BaseEntity::Simulate(void)
129	C_BaseEntity::OnDataChanged(DataUpdateType_t)
130	C_BaseEntity::OnPreDataChanged(DataUpdateType_t)
131	C_BaseEntity::GetClientVehicle(void)
132	C_BaseEntity::GetAimEntOrigin(IClientEntity *,Vector *,QAngle *)
133	C_BaseEntity::GetOldOrigin(void)
134	C_BaseEntity::GetRenderGroup(void)
135	C_BaseEntity::GetToolRecordingState(KeyValues *)
136	C_BaseEntity::CleanupToolRecordingState(KeyValues *)
137	C_BaseEntity::GetCollideType(void)
138	C_BaseEntity::ShouldDraw(void)
139	C_BaseEntity::IsSelfAnimating(void)
140	C_BaseEntity::OnLatchInterpolatedVariables(int)
141	C_BaseEntity::OnNewModel(void)
142	C_BaseEntity::OnNewParticleEffect(char const*,CNewParticleEffect *)
143	C_BaseEntity::ResetLatched(void)
144	C_BaseEntity::Interpolate(float)
145	C_BaseEntity::IsSubModel(void)
146	C_BaseEntity::CreateLightEffects(void)
147	C_BaseEntity::Clear(void)
148	C_BaseEntity::DrawBrushModel(bool,int,bool)
149	C_BaseEntity::GetTextureAnimationStartTime(void)
150	C_BaseEntity::TextureAnimationWrapped(void)
151	C_BaseEntity::SetNextClientThink(float)
152	C_BaseEntity::SetHealth(int)
153	C_BaseEntity::GetHealth(void)const
154	C_BaseEntity::GetMaxHealth(void)const
155	C_BaseEntity::ShadowCastType(void)
156	C_BaseEntity::ShouldReceiveProjectedTextures(int)
157	C_BaseEntity::IsShadowDirty(void)
158	C_BaseEntity::MarkShadowDirty(bool)
159	C_BaseEntity::GetShadowParent(void)
160	C_BaseEntity::FirstShadowChild(void)
161	C_BaseEntity::NextShadowPeer(void)
162	C_BaseEntity::AddDecal(Vector const&,Vector const&,Vector const&,int,int,bool,CGameTrace &,int)
163	C_BaseEntity::IsClientCreated(void)const
164	C_BaseEntity::UpdateOnRemove(void)
165	C_BaseEntity::SUB_Remove(void)
166	C_BaseEntity::SetPredictable(bool)
167	C_BaseEntity::RestoreData(char const*,int,int)
168	C_BaseEntity::DamageDecal(int,int)
169	C_BaseEntity::DecalTrace(CGameTrace *,char const*)
170	C_BaseEntity::ImpactTrace(CGameTrace *,int,char const*)
171	C_BaseEntity::ShouldPredict(void)
172	C_BaseEntity::Think(void)
173	C_BaseEntity::CanBePoweredUp(void)
174	C_BaseEntity::AttemptToPowerup(int,float,float,C_BaseEntity*,CDamageModifier *)
175	C_BaseEntity::IsCurrentlyTouching(void)const
176	C_BaseEntity::StartTouch(C_BaseEntity*)
177	C_BaseEntity::Touch(C_BaseEntity*)
178	C_BaseEntity::EndTouch(C_BaseEntity*)
179	C_BaseEntity::PhysicsSolidMaskForEntity(void)const
180	C_BaseEntity::PhysicsSimulate(void)
181	C_BaseEntity::IsAlive(void)
182	C_BaseEntity::IsPlayer(void)const
183	C_BaseEntity::IsBaseCombatCharacter(void)
184	C_BaseEntity::MyCombatCharacterPointer(void)
185	C_BaseEntity::IsNPC(void)
186	C_BaseEntity::IsNextBot(void)
187	C_BaseEntity::IsBaseObject(void)const
188	C_BaseEntity::IsBaseCombatWeapon(void)const
189	C_BaseEntity::MyCombatWeaponPointer(void)
190	C_BaseEntity::IsBaseTrain(void)const
191	C_BaseEntity::EyePosition(void)
192	C_BaseEntity::EyeAngles(void)
193	C_BaseEntity::LocalEyeAngles(void)
194	C_BaseEntity::EarPosition(void)
195	C_BaseEntity::ShouldCollide(int,int)const
196	C_BaseEntity::GetViewOffset(void)const
197	C_BaseEntity::SetViewOffset(Vector const&)
198	C_BaseEntity::GetBody(void)
199	C_BaseEntity::GetSkin(void)
200	C_BaseEntity::GetModelInstance(void)
201	C_BaseEntity::GetShadowHandle(void)const
202	C_BaseEntity::RenderHandle(void)
203	C_BaseEntity::CreateModelInstance(void)
204	C_BaseEntity::ShouldInterpolate(void)
205	C_BaseEntity::GetClientSideFade(void)
206	C_BaseEntity::BoneMergeFastCullBloat(Vector &,Vector &,Vector const&,Vector const&)const
207	C_BaseEntity::OnPredictedEntityRemove(bool,C_BaseEntity*)
208	C_BaseEntity::GetShadowCastDistance(float *,ShadowType_t)const
209	C_BaseEntity::GetShadowCastDirection(Vector *,ShadowType_t)const
210	C_BaseEntity::GetShadowUseOtherEntity(void)const
211	C_BaseEntity::SetShadowUseOtherEntity(C_BaseEntity*)
212	C_BaseEntity::AddRagdollToFadeQueue(void)
213	C_BaseEntity::IsDeflectable(void)
214	C_BaseEntity::GetStudioBody(void)
215	C_BaseEntity::PerformCustomPhysics(Vector *,Vector *,QAngle *,QAngle *)
216	C_BaseEntity::GetRenderClipPlane(void)
217	C_BaseEntity::OnOwnerChanged(void)
218	C_BaseEntity::VPhysicsGetElement(int)
219	C_BaseEntity::IsARagdoll(void)
220	C_BaseEntity::SetMaterialOverride(char const*)
221	C_BaseEntity::SetMaterialOverridePointer(IMaterial *)
222	C_BaseEntity::GetMaterialOverridePointer(void)
223	C_BaseEntity::GetMaterialOverride(void)
224	C_BaseEntity::StartMaterialOverride(bool)
225	C_BaseEntity::EndMaterialOverride(bool)
226	C_BaseEntity::GetCreationTime(void)
227	C_BaseEntity::IsPredicted(void)const
228	C_BaseEntity::IsWeapon(void)const
229	C_BaseEntity::IsVehicle(void)const
230	C_BaseEntity::IsJeep(void)const
231	C_BaseEntity::UsesLua(void)
232	C_BaseEntity::GetLuaEntityType(void)
233	C_BaseEntity::PushEntity(void)
234	C_BaseEntity::SetEntity(char const*,C_BaseEntity*)
235	C_BaseEntity::GetParentPhysicsNum(void)
236	C_BaseEntity::SetParentPhysicsNum(int)
237	C_BaseEntity::StartMotionController(void)
238	C_BaseEntity::StopMotionController(void)
239	C_BaseEntity::AttachObjectToMotionController(IPhysicsObject *)
240	C_BaseEntity::DetachObjectFromMotionController(IPhysicsObject *)
241	C_BaseEntity::GetCustomisedRenderBounds(Vector &,Vector &)
242	C_BaseEntity::SetCustomisedRenderBounds(Vector *,Vector *)
243	C_BaseEntity::GetLuaScriptName(void)
244	C_BaseEntity::SpawnedViaLua(void)
245	C_BaseEntity::OverridePosition(void)
246	C_BaseEntity::InitializeScriptedEntity(char const*)
247	C_BaseEntity::ClearLuaData(void)
248	C_BaseEntity::GetLuaTable(void)
249	C_BaseEntity::GetLuaEntity(void)
250	C_BaseEntity::SetLuaTable(ILuaObject *)
251	C_BaseEntity::Lua_OnEntityInitialized(void)
252	C_BaseEntity::HasLuaTable(void)
253	C_BaseEntity::LuaEntityInitialized(void)
254	C_BaseEntity::ForcePhysicsDropObject(void)
255	C_BaseEntity::StartDriving(C_BasePlayer *)
256	C_BaseEntity::FinishDriving(C_BasePlayer *)
257	C_BaseEntity::GMod_ShouldRenderEntity(void)
258	C_BaseEntity::OnClientsideLuaRestored(void)
259	C_BaseEntity::Lua_GetLuaClass(void)
260	C_BaseEntity::VPhysicsCollision(int,gamevcollisionevent_t *)
261	C_BaseEntity::GetNextBot(void)
262	C_BaseEntity::ComputeFxBlendForView(int)
